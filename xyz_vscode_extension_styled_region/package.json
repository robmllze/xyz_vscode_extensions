{
  "name": "xyz-styled-region",
  "displayName": "XYZ Styled Region",
  "description": "Allows you to add styles to marked regions in your code",
  "publisher": "robmllze",
  "version": "0.15.1",
  "engines": {
    "vscode": "^1.82.0"
  },
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/robmllze/xyz_styled_region.git"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "*"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "xyz-styled-region.activate",
        "title": "[XYZ Styled Region] Activate"
      },
      {
        "command": "xyz-styled-region.deactivate",
        "title": "[XYZ Styled Region] Deactivate"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "xyz-styled-region.activate",
          "when": "editorTextFocus"
        },
        {
          "command": "xyz-styled-region.deactivate",
          "when": "editorTextFocus"
        }
      ]
    },
    "configuration": {
      "title": "xyz_styled_region Settings",
      "properties": {
        "xyz.styledRegion.styles": {
          "type": "object",
          "default": {},
          "description": "Configure styled regions.",
          "additionalProperties": {
            "type": "object",
            "description": "Properties for a specific style name.",
            "properties": {
              "color": {
                "type": "string",
                "description": "Specify the text color. e.g., \"green\"."
              },
              "backgroundColor": {
                "type": "string",
                "description": "Set the background color of the region. e.g., \"#f2f2f2\"."
              },
              "border": {
                "type": "string",
                "description": "Define the region's border. e.g., \"2px solid red\"."
              },
              "outline": {
                "type": "string",
                "description": "Designate the region's outline. e.g., \"1px dashed blue\"."
              },
              "fontWeight": {
                "type": "string",
                "description": "Determine the text's weight. e.g., \"bold\"."
              },
              "textDecoration": {
                "type": "string",
                "description": "Define text decorations like underline. e.g., \"underline wavy purple\"."
              },
              "letterSpacing": {
                "type": "string",
                "description": "Adjust the spacing between letters. e.g., \"2px\"."
              },
              "opacity": {
                "type": "string",
                "description": "Control the region' opacity. Ranges from 0 (invisible) to 1 (fully visible). e.g., \"0.5\"."
              },
              "borderRadius": {
                "type": "string",
                "description": "Add rounded corners for the border. e.g., \"5px\"."
              },
              "cursor": {
                "type": "string",
                "description": "Determine the cursor when hovering over the region. e.g., \"pointer\"."
              },
              "margin": {
                "type": "string",
                "description": "Set margin around the region (top/bottom). e.g., \"5px 0px\"."
              },
              "padding": {
                "type": "string",
                "description": "Provide space between content and the border/outline. e.g., \"5px\"."
              },
              "overviewRulerColor": {
                "type": "string",
                "description": "Color for the mark in the overview ruler. e.g., \"blue\"."
              },
              "gutterIconPath": {
                "type": "string",
                "description": "Path for the icon shown in the gutter. e.g., \"path_to_icon\"."
              },
              "gutterIconSize": {
                "type": "string",
                "description": "Specify the size of the gutter icon. Options are \"contain\", \"auto\", or a percentage like \"50%\"."
              },
              "before": {
                "type": "object",
                "description": "Add content before each line in the region.",
                "properties": {
                  "contentText": {
                    "type": "string",
                    "description": "Text to insert before the line. e.g., \"=> \"."
                  },
                  "color": {
                    "type": "string",
                    "description": "Color for the content placed before. e.g., \"blue\"."
                  }
                }
              },
              "after": {
                "type": "object",
                "description": "Insert content after each line in the region.",
                "properties": {
                  "contentText": {
                    "type": "string",
                    "description": "Text to insert after the line. e.g., \" <=\". "
                  },
                  "color": {
                    "type": "string",
                    "description": "Color for the content placed after. e.g., \"red\"."
                  }
                }
              },
              "isWholeLine": {
                "type": "boolean",
                "description": "Apply style to the entire line including whitespace. e.g., true or false."
              }
            },
            "additionalProperties": true
          }
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.82.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "eslint": "^8.47.0",
    "glob": "^10.3.3",
    "mocha": "^10.2.0",
    "typescript": "^5.1.6",
    "@vscode/test-electron": "^2.3.4"
  }
}